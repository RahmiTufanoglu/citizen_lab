@startuml
set namespaceSeparator ::

class "citizen_lab::app.dart::App" {
  +_AppState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::app.dart::App"

class "citizen_lab::app.dart::_AppState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::app.dart::_AppState"

class "citizen_lab::audio_record_page.dart::PermissionStatus" {
  +int index
  {static} +List<PermissionStatus> values
  {static} +PermissionStatus allow
  {static} +PermissionStatus deny
  {static} +PermissionStatus notDecided
  {static} +PermissionStatus notAgain
  {static} +PermissionStatus whenInUse
  {static} +PermissionStatus always
}

"citizen_lab::audio_record_page.dart::PermissionStatus" o-- "citizen_lab::audio_record_page.dart::PermissionStatus"

class "citizen_lab::audio_record_page.dart::AudioRecordPage" {
  +Note note
  +String uuid
  +_AudioRecordPageState createState()
}

"citizen_lab::audio_record_page.dart::AudioRecordPage" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::audio_record_page.dart::AudioRecordPage"

class "citizen_lab::audio_record_page.dart::_AudioRecordPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -TextEditingController _titleEditingController
  -TextEditingController _descEditingController
  +FlutterSound flutterSound
  -ThemeChangerProvider _themeChanger
  -String _audioPath
  -String _title
  -String _createdAt
  -Icon _iconBody
  -Icon _iconFab
  -bool _isRecording
  -bool _recordPlaying
  -List<Permissions> _permissions
  +Random random
  +void initState()
  -Future _setPlatformPath()
  -Future _localPath()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -Future _shareContent()
  -void _setInfoPage()
  -void _backToHomePage()
  -Widget _buildFabs()
  -void _showEditDialog()
  -Widget _buildBody()
  -void _buildStartStopAudioButton()
  -Future _playAudio()
  -Future _stopAudio()
  -Future _setPermission()
  -Future _buildRecordButton()
  -Future _checkIfFileExists()
  -Future _checkIfTitleIsAlreadyTaken2()
  +int next()
  -Future _startRecord()
  -Future _stopRecord()
  -Future _saveNote()
  -void _updateNote()
  -Widget _buildSnackBar()
  -Widget _buildSnackBarWithButton()
}

"citizen_lab::audio_record_page.dart::_AudioRecordPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::audio_record_page.dart::_AudioRecordPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::audio_record_page.dart::_AudioRecordPageState" o-- "flutter_sound::flutter_sound.dart::FlutterSound"
"citizen_lab::audio_record_page.dart::_AudioRecordPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"citizen_lab::audio_record_page.dart::_AudioRecordPageState" o-- "flutter::src::widgets::icon.dart::Icon"
"citizen_lab::audio_record_page.dart::_AudioRecordPageState" o-- "dart::math::Random"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::audio_record_page.dart::_AudioRecordPageState"

abstract class "citizen_lab::bloc::base_bloc.dart::BaseBloc" {
  +void dispose()
}

class "citizen_lab::bloc::custom_expansion_tile.dart::CustomExpansionTile" {
  +Widget leading
  +Widget title
  +void Function(bool) onExpansionChanged
  +List<Widget> children
  +Color backgroundColor
  +Widget trailing
  +bool initiallyExpanded
  +_CustomExpansionTileState createState()
}

"citizen_lab::bloc::custom_expansion_tile.dart::CustomExpansionTile" o-- "flutter::src::widgets::framework.dart::Widget"
"citizen_lab::bloc::custom_expansion_tile.dart::CustomExpansionTile" o-- "flutter::src::foundation::basic_types.dart::void Function(bool)"
"citizen_lab::bloc::custom_expansion_tile.dart::CustomExpansionTile" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::bloc::custom_expansion_tile.dart::CustomExpansionTile"

class "citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState" {
  {static} -Animatable<double> _easeOutTween
  {static} -Animatable<double> _easeInTween
  {static} -Animatable<double> _halfTween
  -ColorTween _borderColorTween
  -ColorTween _headerColorTween
  -ColorTween _iconColorTween
  -ColorTween _backgroundColorTween
  -AnimationController _controller
  -Animation<double> _iconTurns
  -Animation<double> _heightFactor
  -Animation<Color> _headerColor
  -Animation<Color> _iconColor
  -Animation<Color> _backgroundColor
  -bool _isExpanded
  +void initState()
  +void dispose()
  -void _handleTap()
  -Widget _buildChildren()
  +void didChangeDependencies()
  +Widget build()
}

"citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState" o-- "flutter::src::animation::tween.dart::Animatable<double>"
"citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState" o-- "flutter::src::animation::tween.dart::ColorTween"
"citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState" o-- "flutter::src::animation::animation.dart::Animation<Color>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin<T>" <|-- "citizen_lab::bloc::custom_expansion_tile.dart::_CustomExpansionTileState"

class "citizen_lab::bloc::db_provider.dart::DbProvider" {
  +void add()
  +void update()
  +void delete()
  +void deleteAllNotesFromProject()
}

"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::bloc::db_provider.dart::DbProvider"

class "citizen_lab::bloc::notes_bloc.dart::NotesBloc" {
  -StreamController<List<Note>> _notesController
  +Stream<List<Note>> notes
  +void dispose()
  +Future getNotes()
  +void blockUnblock()
  +void add()
  +void update()
  +void delete()
  +void deleteAllNotesFromProject()
  +void sortByTitleArc()
  +void sortByTitleDesc()
  +void sortByReleaseDateArc()
  +void sortByReleaseDateDesc()
}

"citizen_lab::bloc::notes_bloc.dart::NotesBloc" o-- "dart::async::StreamController<List<Note>>"
"citizen_lab::bloc::notes_bloc.dart::NotesBloc" o-- "dart::async::Stream<List<Note>>"
"citizen_lab::bloc::base_bloc.dart::BaseBloc" <|-- "citizen_lab::bloc::notes_bloc.dart::NotesBloc"

class "citizen_lab::bloc::notes_provider.dart::NotesProvider" {
  -Note _note
  +dynamic getNote()
  +dynamic setNote()
  +void add()
  +void update()
  +void delete()
  +void deleteAllNotesFromProject()
}

"citizen_lab::bloc::notes_provider.dart::NotesProvider" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::bloc::notes_provider.dart::NotesProvider"

class "citizen_lab::bloc::theme_bloc.dart::ThemeBloc" {
  -StreamController<bool> _themeController
  +void changeTheme
  +Stream<bool> darkThemeEnabled
  +void dispose()
}

"citizen_lab::bloc::theme_bloc.dart::ThemeBloc" o-- "dart::async::StreamController<bool>"
"citizen_lab::bloc::theme_bloc.dart::ThemeBloc" o-- "dart::async::Stream<bool>"
"citizen_lab::bloc::base_bloc.dart::BaseBloc" <|-- "citizen_lab::bloc::theme_bloc.dart::ThemeBloc"

class "citizen_lab::bloc::title_bloc.dart::TitleBloc" {
  -BehaviorSubject<String> _titleStreamController
  +Stream<String> title
  +dynamic Function(String) changeTitle
  +void checkAppBarTitle()
  +void dispose()
}

"citizen_lab::bloc::title_bloc.dart::TitleBloc" o-- "rxdart::src::subjects::behavior_subject.dart::BehaviorSubject<String>"
"citizen_lab::bloc::title_bloc.dart::TitleBloc" o-- "dart::async::Stream<String>"
"citizen_lab::bloc::title_bloc.dart::TitleBloc" o-- "citizen_lab::bloc::title_bloc.dart::dynamic Function(String)"
"citizen_lab::bloc::validators.dart::Validators" <|-- "citizen_lab::bloc::title_bloc.dart::TitleBloc"
"citizen_lab::bloc::base_bloc.dart::BaseBloc" <|-- "citizen_lab::bloc::title_bloc.dart::TitleBloc"

abstract class "citizen_lab::bloc::validators.dart::Validators" {
  {static} +String titleIsEmpty
  +StreamTransformer<String, String> titleValidator
}

"citizen_lab::bloc::validators.dart::Validators" o-- "dart::async::StreamTransformer<String, String>"

class "citizen_lab::card_colors.dart::CardColors" {
  -int _cardBackgroundColor
  -int _cardItemColor
  +int cardBackgroundColor
  +int cardItemColor
}

class "citizen_lab::citizen_science::about_page.dart::SimpleInfoPage" {
  +String title
  +String content
  +_SimpleInfoPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::citizen_science::about_page.dart::SimpleInfoPage"

class "citizen_lab::citizen_science::about_page.dart::_SimpleInfoPageState" {
  -ThemeChangerProvider _themeChanger
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildBody()
}

"citizen_lab::citizen_science::about_page.dart::_SimpleInfoPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::citizen_science::about_page.dart::_SimpleInfoPageState"

class "citizen_lab::citizen_science::citizen_science_detail_page.dart::DetailPage" {
  +String title
  +String image
  +String location
  +String researchSubject
  +String built
  +String extended
  +String contactPerson
  +String url
  +_DetailPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::citizen_science::citizen_science_detail_page.dart::DetailPage"

class "citizen_lab::citizen_science::citizen_science_detail_page.dart::_DetailPageState" {
  -ThemeChangerProvider _themeChanger
  +Widget build()
  -Widget _buildBody()
  -Widget _titleAndContent()
  -Widget _buildFab()
  -Future _launchWeb()
}

"citizen_lab::citizen_science::citizen_science_detail_page.dart::_DetailPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::citizen_science::citizen_science_detail_page.dart::_DetailPageState"

class "citizen_lab::citizen_science::citizen_science_page.dart::CitizenSciencePage" {
  +_CitizenSciencePageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::citizen_science::citizen_science_page.dart::CitizenSciencePage"

class "citizen_lab::citizen_science::citizen_science_page.dart::_CitizenSciencePageState" {
  -ThemeChangerProvider _themeChanger
  +Widget build()
  -Widget _buildAppBar()
  -void _setInfoPage()
  -Future _backToHomePage()
  -Widget _buildBody()
  -Future _showContent()
}

"citizen_lab::citizen_science::citizen_science_page.dart::_CitizenSciencePageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::citizen_science::citizen_science_page.dart::_CitizenSciencePageState"

class "citizen_lab::citizen_science::citizen_science_search_page.dart::CitizenScienceSearchPage" {
  +List<CitizenScienceModel> citizenScienceList
  -bool _darkModeEnabled
  +ThemeData appBarTheme()
  -void _checkIfDarkModeEnabled()
  +List buildActions()
  +Widget buildLeading()
  +Widget buildResults()
  +Widget buildSuggestions()
  -List _getCitizenScienceTitles()
}

"flutter::src::material::search.dart::SearchDelegate<T>" <|-- "citizen_lab::citizen_science::citizen_science_search_page.dart::CitizenScienceSearchPage"

class "citizen_lab::citizen_science::citizen_science_web.dart::CitizenScienceWebPage" {
  +String title
  +String url
  +_CitizenScienceWebPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::citizen_science::citizen_science_web.dart::CitizenScienceWebPage"

class "citizen_lab::citizen_science::citizen_science_web.dart::_CitizenScienceWebPageState" {
  -Completer<WebViewController> _webViewController
  -UniqueKey _key
  -bool _isLoadingPage
  -ThemeChangerProvider _themeChanger
  +void initState()
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildBody()
}

"citizen_lab::citizen_science::citizen_science_web.dart::_CitizenScienceWebPageState" o-- "dart::async::Completer<WebViewController>"
"citizen_lab::citizen_science::citizen_science_web.dart::_CitizenScienceWebPageState" o-- "flutter::src::widgets::framework.dart::UniqueKey"
"citizen_lab::citizen_science::citizen_science_web.dart::_CitizenScienceWebPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::citizen_science::citizen_science_web.dart::_CitizenScienceWebPageState"

class "citizen_lab::citizen_science::cizizen_science_model.dart::CitizenScienceModel" {
  +String title
  +String image
  +String location
  +String researchSubject
  +String built
  +String extended
  +String contactPerson
  +String url
  +String getTitle
  +String getImage
  +String getLocation
  +String getResearchSubject
  +String getBuilt
  +String getExtended
  +String getContactPerson
  +String getUrl
}

class "citizen_lab::citizen_science::timer_provider.dart::TimerProvider" {
  +String getTime
  +void setTimer()
  -String _dateFormatted()
}

"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::citizen_science::timer_provider.dart::TimerProvider"

class "citizen_lab::citizen_science::title_provider.dart::TitleProvider" {
  -String _title
  +String getTitle
  +void setTitle()
}

"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::citizen_science::title_provider.dart::TitleProvider"

class "citizen_lab::collapsing_appbar_page.dart::CollapsingAppBarPage" {
  +double fontSize
  +double appBarElevation
  +String image
  +Widget text
  +Widget body
  +Widget build()
}

"citizen_lab::collapsing_appbar_page.dart::CollapsingAppBarPage" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::collapsing_appbar_page.dart::CollapsingAppBarPage"

class "citizen_lab::custom_dropdown.dart::_DropdownMenuPainter" {
  +Color color
  +int elevation
  +int selectedIndex
  +Animation<double> resize
  -BoxPainter _painter
  +void paint()
  +bool shouldRepaint()
}

"citizen_lab::custom_dropdown.dart::_DropdownMenuPainter" o-- "dart::ui::Color"
"citizen_lab::custom_dropdown.dart::_DropdownMenuPainter" o-- "flutter::src::animation::animation.dart::Animation<double>"
"citizen_lab::custom_dropdown.dart::_DropdownMenuPainter" o-- "flutter::src::painting::decoration.dart::BoxPainter"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "citizen_lab::custom_dropdown.dart::_DropdownMenuPainter"

class "citizen_lab::custom_dropdown.dart::_DropdownScrollBehavior" {
  +TargetPlatform getPlatform()
  +Widget buildViewportChrome()
  +ScrollPhysics getScrollPhysics()
}

"flutter::src::widgets::scroll_configuration.dart::ScrollBehavior" <|-- "citizen_lab::custom_dropdown.dart::_DropdownScrollBehavior"

class "citizen_lab::custom_dropdown.dart::_CustomDropdownMenu<T>" {
  +_DropdownRoute<T> route
  +EdgeInsets padding
  +_CustomDropdownMenuState createState()
}

"citizen_lab::custom_dropdown.dart::_CustomDropdownMenu<T>" o-- "citizen_lab::custom_dropdown.dart::_DropdownRoute<T>"
"citizen_lab::custom_dropdown.dart::_CustomDropdownMenu<T>" o-- "flutter::src::painting::edge_insets.dart::EdgeInsets"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_dropdown.dart::_CustomDropdownMenu<T>"

class "citizen_lab::custom_dropdown.dart::_CustomDropdownMenuState<T>" {
  -CurvedAnimation _fadeOpacity
  -CurvedAnimation _resize
  +void initState()
  +Widget build()
}

"citizen_lab::custom_dropdown.dart::_CustomDropdownMenuState<T>" o-- "flutter::src::animation::animations.dart::CurvedAnimation"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_dropdown.dart::_CustomDropdownMenuState<T>"

class "citizen_lab::custom_dropdown.dart::_DropdownMenuRouteLayout<T>" {
  +Rect buttonRect
  +double menuTop
  +double menuHeight
  +TextDirection textDirection
  +BoxConstraints getConstraintsForChild()
  +Offset getPositionForChild()
  +bool shouldRelayout()
}

"citizen_lab::custom_dropdown.dart::_DropdownMenuRouteLayout<T>" o-- "dart::ui::Rect"
"citizen_lab::custom_dropdown.dart::_DropdownMenuRouteLayout<T>" o-- "dart::ui::TextDirection"
"flutter::src::rendering::shifted_box.dart::SingleChildLayoutDelegate" <|-- "citizen_lab::custom_dropdown.dart::_DropdownMenuRouteLayout<T>"

class "citizen_lab::custom_dropdown.dart::_DropdownRouteResult<T>" {
  +T result
  +int hashCode
  +bool ==()
}

class "citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" {
  +List<CustomDropdownMenuItem<T>> items
  +EdgeInsetsGeometry padding
  +Rect buttonRect
  +int selectedIndex
  +int elevation
  +ThemeData theme
  +TextStyle style
  +ScrollController scrollController
  +String barrierLabel
  +Duration transitionDuration
  +bool barrierDismissible
  +Color barrierColor
  +Widget buildPage()
  -void _dismiss()
}

"citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" o-- "dart::ui::Rect"
"citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" o-- "flutter::src::material::theme_data.dart::ThemeData"
"citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" o-- "flutter::src::painting::text_style.dart::TextStyle"
"citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"citizen_lab::custom_dropdown.dart::_DropdownRoute<T>" o-- "dart::ui::Color"
"flutter::src::widgets::routes.dart::PopupRoute<T>" <|-- "citizen_lab::custom_dropdown.dart::_DropdownRoute<T>"

class "citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" {
  +_DropdownRoute<T> route
  +BoxConstraints constraints
  +List<CustomDropdownMenuItem<T>> items
  +EdgeInsetsGeometry padding
  +Rect buttonRect
  +int selectedIndex
  +int elevation
  +ThemeData theme
  +TextStyle style
  +Widget build()
}

"citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" o-- "citizen_lab::custom_dropdown.dart::_DropdownRoute<T>"
"citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" o-- "flutter::src::rendering::box.dart::BoxConstraints"
"citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" o-- "dart::ui::Rect"
"citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" o-- "flutter::src::material::theme_data.dart::ThemeData"
"citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>" o-- "flutter::src::painting::text_style.dart::TextStyle"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_dropdown.dart::_DropdownRoutePage<T>"

class "citizen_lab::custom_dropdown.dart::CustomDropdownMenuItem<T>" {
  +Widget child
  +T value
  +Widget build()
}

"citizen_lab::custom_dropdown.dart::CustomDropdownMenuItem<T>" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_dropdown.dart::CustomDropdownMenuItem<T>"

class "citizen_lab::custom_dropdown.dart::DropdownButtonHideUnderline" {
  {static} +bool at()
  +bool updateShouldNotify()
}

"flutter::src::widgets::framework.dart::InheritedWidget" <|-- "citizen_lab::custom_dropdown.dart::DropdownButtonHideUnderline"

class "citizen_lab::custom_dropdown.dart::DropdownButton<T>" {
  +List<CustomDropdownMenuItem<T>> items
  +T value
  +Widget hint
  +Widget disabledHint
  +void Function(T) onChanged
  +int elevation
  +TextStyle style
  +Widget underline
  +Widget icon
  +Color iconDisabledColor
  +Color iconEnabledColor
  +double iconSize
  +bool isDense
  +bool isExpanded
  +_DropdownButtonState createState()
}

"citizen_lab::custom_dropdown.dart::DropdownButton<T>" o-- "flutter::src::widgets::framework.dart::Widget"
"citizen_lab::custom_dropdown.dart::DropdownButton<T>" o-- "flutter::src::foundation::basic_types.dart::void Function(T)"
"citizen_lab::custom_dropdown.dart::DropdownButton<T>" o-- "flutter::src::painting::text_style.dart::TextStyle"
"citizen_lab::custom_dropdown.dart::DropdownButton<T>" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_dropdown.dart::DropdownButton<T>"

class "citizen_lab::custom_dropdown.dart::_DropdownButtonState<T>" {
  -int _selectedIndex
  -_DropdownRoute<T> _dropdownRoute
  -TextStyle _textStyle
  -double _denseButtonHeight
  -Color _iconColor
  -bool _enabled
  +void initState()
  +void dispose()
  +void didChangeMetrics()
  -void _removeDropdownRoute()
  +void didUpdateWidget()
  -void _updateSelectedIndex()
  -void _handleTap()
  +Widget build()
}

"citizen_lab::custom_dropdown.dart::_DropdownButtonState<T>" o-- "citizen_lab::custom_dropdown.dart::_DropdownRoute<T>"
"citizen_lab::custom_dropdown.dart::_DropdownButtonState<T>" o-- "flutter::src::painting::text_style.dart::TextStyle"
"citizen_lab::custom_dropdown.dart::_DropdownButtonState<T>" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_dropdown.dart::_DropdownButtonState<T>"
"flutter::src::widgets::binding.dart::WidgetsBindingObserver" <|-- "citizen_lab::custom_dropdown.dart::_DropdownButtonState<T>"

class "citizen_lab::custom_dropdown.dart::DropdownButtonFormField<T>" {
  +void Function(T) onChanged
  +FormFieldState createState()
}

"citizen_lab::custom_dropdown.dart::DropdownButtonFormField<T>" o-- "flutter::src::foundation::basic_types.dart::void Function(T)"
"flutter::src::widgets::form.dart::FormField<T>" <|-- "citizen_lab::custom_dropdown.dart::DropdownButtonFormField<T>"

class "citizen_lab::custom_dropdown.dart::_DropdownButtonFormFieldState<T>" {
  +DropdownButtonFormField<T> widget
  +void didChange()
}

"citizen_lab::custom_dropdown.dart::_DropdownButtonFormFieldState<T>" o-- "citizen_lab::custom_dropdown.dart::DropdownButtonFormField<T>"
"flutter::src::widgets::form.dart::FormFieldState<T>" <|-- "citizen_lab::custom_dropdown.dart::_DropdownButtonFormFieldState<T>"

class "citizen_lab::custom_localization_delegate.dart::CustomLocalizationDelegate" {
  +bool isSupported()
  +Future load()
  +bool shouldReload()
  +String toString()
}

"flutter::src::widgets::localizations.dart::LocalizationsDelegate<T>" <|-- "citizen_lab::custom_localization_delegate.dart::CustomLocalizationDelegate"

class "citizen_lab::custom_localization_delegate.dart::CustomLocalization" {
  +String searchFieldLabel
}

"flutter::src::material::material_localizations.dart::DefaultMaterialLocalizations" <|-- "citizen_lab::custom_localization_delegate.dart::CustomLocalization"

class "citizen_lab::custom_widgets::alarm_dialog.dart::AlarmDialog" {
  +IconData icon
  +Color iconColor
  +String text
  +void Function() onTap
  +_AlarmDialogState createState()
}

"citizen_lab::custom_widgets::alarm_dialog.dart::AlarmDialog" o-- "flutter::src::widgets::icon_data.dart::IconData"
"citizen_lab::custom_widgets::alarm_dialog.dart::AlarmDialog" o-- "dart::ui::Color"
"citizen_lab::custom_widgets::alarm_dialog.dart::AlarmDialog" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::alarm_dialog.dart::AlarmDialog"

class "citizen_lab::custom_widgets::alarm_dialog.dart::_AlarmDialogState" {
  +String yes
  +String no
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::alarm_dialog.dart::_AlarmDialogState"

class "citizen_lab::custom_widgets::column_row_edit_widget.dart::ColumnRowEditingWidget" {
  +String title
  +TextEditingController titleEditingController
  +TextEditingController columnEditingController
  +TextEditingController rowEditingController
  +void Function() onPressedClear
  +void Function() onPressedCheck
  +_ColumnRowEditingWidgetState createState()
}

"citizen_lab::custom_widgets::column_row_edit_widget.dart::ColumnRowEditingWidget" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::custom_widgets::column_row_edit_widget.dart::ColumnRowEditingWidget" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::column_row_edit_widget.dart::ColumnRowEditingWidget"

class "citizen_lab::custom_widgets::column_row_edit_widget.dart::_ColumnRowEditingWidgetState" {
  -GlobalKey<FormState> _formKey
  +Widget build()
  -Widget _buildDialog()
}

"citizen_lab::custom_widgets::column_row_edit_widget.dart::_ColumnRowEditingWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::column_row_edit_widget.dart::_ColumnRowEditingWidgetState"

class "citizen_lab::custom_widgets::dial_floating_action_button.dart::DialFloatingActionButton" {
  +IconData firstIcon
  +IconData secondIcon
  +List<Icon> iconList
  +List<String> stringList
  +Function function
  +_DialFloatingActionButtonState createState()
}

"citizen_lab::custom_widgets::dial_floating_action_button.dart::DialFloatingActionButton" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::dial_floating_action_button.dart::DialFloatingActionButton"

class "citizen_lab::custom_widgets::dial_floating_action_button.dart::_DialFloatingActionButtonState" {
  -AnimationController _animationController
  +void initState()
  +void dispose()
  +Widget build()
}

"citizen_lab::custom_widgets::dial_floating_action_button.dart::_DialFloatingActionButtonState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::dial_floating_action_button.dart::_DialFloatingActionButtonState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin<T>" <|-- "citizen_lab::custom_widgets::dial_floating_action_button.dart::_DialFloatingActionButtonState"

class "citizen_lab::custom_widgets::feedback_dialog.dart::FeedbackDialog" {
  +String title
  +String titleButtonLeft
  +String titleButtonRight
  +String labelText
  +String isEmptyText
  +String url
  +IconData iconButtonLeft
  +IconData iconButtonRight
  +_FeedbackDialogState createState()
}

"citizen_lab::custom_widgets::feedback_dialog.dart::FeedbackDialog" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::feedback_dialog.dart::FeedbackDialog"

class "citizen_lab::custom_widgets::feedback_dialog.dart::_FeedbackDialogState" {
  -TextEditingController _feedbackMessage
  -GlobalKey<FormState> _formKey
  +Widget build()
  -Future _launchUrl()
}

"citizen_lab::custom_widgets::feedback_dialog.dart::_FeedbackDialogState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::custom_widgets::feedback_dialog.dart::_FeedbackDialogState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::feedback_dialog.dart::_FeedbackDialogState"

class "citizen_lab::custom_widgets::info_page.dart::InfoPage" {
  +String title
  +int tabLength
  +List<Widget> tabs
  +List<Widget> tabChildren
  +_InfoPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::info_page.dart::InfoPage"

class "citizen_lab::custom_widgets::info_page.dart::_InfoPageState" {
  -ThemeChangerProvider _themeChanger
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildBody()
}

"citizen_lab::custom_widgets::info_page.dart::_InfoPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::info_page.dart::_InfoPageState"

class "citizen_lab::custom_widgets::made_with_love_text_box.dart::MadeWithLoveTextBox" {
  +String place
  +Color iconColorHeart
  +Color iconColorSmile
  +double iconSize
  +double iconRightPadding
  +double iconLeftPadding
  +Widget build()
}

"citizen_lab::custom_widgets::made_with_love_text_box.dart::MadeWithLoveTextBox" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_widgets::made_with_love_text_box.dart::MadeWithLoveTextBox"

class "citizen_lab::custom_widgets::main_table_widget.dart::MainTableWidet" {
  +Function onWillPop
  +int column
  +int row
  +List<TextEditingController> textEditingController
  +Function generateTable
  +_MainTableWidetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::main_table_widget.dart::MainTableWidet"

class "citizen_lab::custom_widgets::main_table_widget.dart::_MainTableWidetState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::main_table_widget.dart::_MainTableWidetState"

class "citizen_lab::custom_widgets::note_item.dart::NoteItem" {
  +Note note
  +bool isFromNoteSearchPage
  +Function noteFunction
  +Function close
  +void Function() onLongPress
  +Widget build()
  -Icon _getIcon()
}

"citizen_lab::custom_widgets::note_item.dart::NoteItem" o-- "citizen_lab::entries::note.dart::Note"
"citizen_lab::custom_widgets::note_item.dart::NoteItem" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_widgets::note_item.dart::NoteItem"

class "citizen_lab::custom_widgets::no_yes_dialog.dart::NoYesDialog" {
  +String text
  +void Function() onPressed
  +Widget build()
  -Widget _buildNoYesDialog()
}

"citizen_lab::custom_widgets::no_yes_dialog.dart::NoYesDialog" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_widgets::no_yes_dialog.dart::NoYesDialog"

class "citizen_lab::custom_widgets::set_title_widget.dart::SetTitleWidget" {
  +TextEditingController titleTextEditingController
  +void Function() onPressed
  +_SetTitleWidgetState createState()
}

"citizen_lab::custom_widgets::set_title_widget.dart::SetTitleWidget" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::custom_widgets::set_title_widget.dart::SetTitleWidget" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::set_title_widget.dart::SetTitleWidget"

class "citizen_lab::custom_widgets::set_title_widget.dart::_SetTitleWidgetState" {
  -GlobalKey<FormState> _formKey
  +Widget build()
  -Widget _setTitleDialog()
}

"citizen_lab::custom_widgets::set_title_widget.dart::_SetTitleWidgetState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::set_title_widget.dart::_SetTitleWidgetState"

class "citizen_lab::custom_widgets::simple_alert_dialog_with_icon.dart::SimpleAlertDialogWithIcon" {
  +String text
  +double fontSize
  +double iconSize
  +double borderRadius
  +double textIconSpace
  +Color fontColor
  +Color iconColor
  +IconData icon
  +List<Widget> actions
  +Widget build()
}

"citizen_lab::custom_widgets::simple_alert_dialog_with_icon.dart::SimpleAlertDialogWithIcon" o-- "dart::ui::Color"
"citizen_lab::custom_widgets::simple_alert_dialog_with_icon.dart::SimpleAlertDialogWithIcon" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_widgets::simple_alert_dialog_with_icon.dart::SimpleAlertDialogWithIcon"

class "citizen_lab::custom_widgets::simple_timer_dialog.dart::SimpleTimerDialog" {
  +String createdAt
  +TextEditingController textEditingController
  +TextEditingController descEditingController
  +void Function() onPressedClear
  +void Function() onPressedUpdate
  +void Function() onPressedClose
  +bool descExists
  +_SimpleTimerDialogState createState()
}

"citizen_lab::custom_widgets::simple_timer_dialog.dart::SimpleTimerDialog" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::custom_widgets::simple_timer_dialog.dart::SimpleTimerDialog" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::simple_timer_dialog.dart::SimpleTimerDialog"

class "citizen_lab::custom_widgets::simple_timer_dialog.dart::_SimpleTimerDialogState" {
  -GlobalKey<FormState> _formKey
  -String _timeString
  -Timer _timer
  +void initState()
  +void dispose()
  -void _getTime()
  +Widget build()
  -Widget _buildDialog()
  -Widget _descWidget()
}

"citizen_lab::custom_widgets::simple_timer_dialog.dart::_SimpleTimerDialogState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"citizen_lab::custom_widgets::simple_timer_dialog.dart::_SimpleTimerDialogState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::simple_timer_dialog.dart::_SimpleTimerDialogState"

class "citizen_lab::custom_widgets::simple_timer_page.dart::SimpleTimerPage" {
  +String createdAt
  +TextEditingController textEditingController
  +TextEditingController descEditingController
  +void Function() onPressedClear
  +void Function() onPressedUpdate
  +void Function() onPressedClose
  +bool descExists
  +_SimpleTimerPageState createState()
}

"citizen_lab::custom_widgets::simple_timer_page.dart::SimpleTimerPage" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::custom_widgets::simple_timer_page.dart::SimpleTimerPage" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::simple_timer_page.dart::SimpleTimerPage"

class "citizen_lab::custom_widgets::simple_timer_page.dart::_SimpleTimerPageState" {
  -GlobalKey<FormState> _formKey
  -String _timeString
  -Timer _timer
  +void initState()
  +void dispose()
  -void _getTime()
  +Widget build()
  -Widget _buildBody()
  -Widget _descWidget()
}

"citizen_lab::custom_widgets::simple_timer_page.dart::_SimpleTimerPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"citizen_lab::custom_widgets::simple_timer_page.dart::_SimpleTimerPageState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::simple_timer_page.dart::_SimpleTimerPageState"

class "citizen_lab::custom_widgets::table_widget.dart::TableWidget" {
  +List<TextEditingController> listTextEditingController
  +int column
  +int row
  +_TableWidgetState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::table_widget.dart::TableWidget"

class "citizen_lab::custom_widgets::table_widget.dart::_TableWidgetState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::table_widget.dart::_TableWidgetState"

class "citizen_lab::custom_widgets::title_desc_widget.dart::TitleDescWidget" {
  +dynamic uuid
  +dynamic titleBloc
  +TitleChangerProvider titleChanger
  +String title
  +String createdAt
  +dynamic titleEditingController
  +dynamic descEditingController
  +Function onWillPop
  +DatabaseHelper db
  +_TitleDescWidgetState createState()
}

"citizen_lab::custom_widgets::title_desc_widget.dart::TitleDescWidget" o-- "citizen_lab::title_change_provider.dart::TitleChangerProvider"
"citizen_lab::custom_widgets::title_desc_widget.dart::TitleDescWidget" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::custom_widgets::title_desc_widget.dart::TitleDescWidget"

class "citizen_lab::custom_widgets::title_desc_widget.dart::_TitleDescWidgetState" {
  +List<Note> noteList
  +List<Project> projectList
  +String noteTitle
  +String noteDesc
  +String projectTitle
  +String projectDesc
  -Timer _timer
  -String _timeString
  +void initState()
  +void dispose()
  -void _getTime()
  +Widget build()
  -bool _checkIfDarkModeEnabled()
  -Widget _buildWidget()
  -Widget _getTimeWidget()
  -Widget _getTextWidget()
  -Widget _getComparisonWidget()
  -Future _getProjectsFromDb()
  -Future _getNotesFromDb()
  -TextField _buildTextField()
  -UnderlineInputBorder _buildUnderlineInputBorder()
}

"citizen_lab::custom_widgets::title_desc_widget.dart::_TitleDescWidgetState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::custom_widgets::title_desc_widget.dart::_TitleDescWidgetState"

class "citizen_lab::custom_widgets::top_text_card.dart::TopTextCard" {
  +String asset
  +String title
  +double fontSize
  +double shadow1OffsetX
  +double shadow1OffsetY
  +double shadow2OffsetX
  +double shadow2OffsetY
  +double shadow1Blur
  +double shadow2Blur
  +Color shadow1Color
  +Color shadow2Color
  +Color fontColor
  +void Function() onTapTitle
  +void Function() onTapImage
  +Widget build()
}

"citizen_lab::custom_widgets::top_text_card.dart::TopTextCard" o-- "dart::ui::Color"
"citizen_lab::custom_widgets::top_text_card.dart::TopTextCard" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::custom_widgets::top_text_card.dart::TopTextCard"

class "citizen_lab::database::database_bloc.dart::DatabaseBloc" {
  -StreamController<List<Note>> _noteController
  +dynamic notes
  +dynamic dispose()
  +dynamic getNotes()
  +dynamic delete()
  +dynamic add()
}

"citizen_lab::database::database_bloc.dart::DatabaseBloc" o-- "dart::async::StreamController<List<Note>>"

class "citizen_lab::database::database_provider.dart::DatabaseHelper" {
  {static} +DatabaseHelper db
  -Database _db
  {static} +int dbVersion
  {static} +String dbName
  {static} +String projectTable
  {static} +String columnProjectId
  {static} +String columnProjectUuid
  {static} +String columnProjectNoteId
  {static} +String columnProjectTitle
  {static} +String columnProjectDesc
  {static} +String columnProjectCreatedAt
  {static} +String columnProjectUpdatedAt
  {static} +String columnProjectCardColor
  {static} +String columnProjectCardTextColor
  {static} +String noteTable
  {static} +String columnNoteId
  {static} +String columnNoteProject
  {static} +String columnNoteType
  {static} +String columnNoteTitle
  {static} +String columnNoteDescription
  {static} +String columnNoteContent
  {static} +String columnNoteTableColumn
  {static} +String columnNoteTableRow
  {static} +String columnNoteCreatedAt
  {static} +String columnNoteUpdatedAt
  {static} +String columnNoteIsFirstTime
  {static} +String columnNoteIsEdited
  {static} +String columnNoteCardColor
  {static} +String columnNoteCardTextColor
  {static} +String createProjectTable
  {static} +String createNoteTable
  +Future<Database> database
  +Future initDb()
  -Future _onCreate()
  +Future insertProject()
  +Future getProject()
  +Future getAllProjects()
  +Future deleteProject()
  +Future deleteAllProjects()
  +Future updateProject()
  +Future getProjectCount()
  +Future getNotesOfProject()
  +Future getAllNotes()
  +Future insertNote()
  +Future getNote()
  +Future deleteNote()
  +Future deleteAllNotes()
  +Future deleteAllNotesFromProject()
  +Future updateNote()
  +Future getCount()
  +Future close()
}

"citizen_lab::database::database_provider.dart::DatabaseHelper" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::database::database_provider.dart::DatabaseHelper" o-- "sqflite::sqlite_api.dart::Database"
"citizen_lab::database::project_dao.dart::ProjectDao" <|-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::database::note_dao.dart::NoteDao" <|-- "citizen_lab::database::database_provider.dart::DatabaseHelper"

abstract class "citizen_lab::database::note_dao.dart::NoteDao" {
  +Future getNotesOfProject()
  +Future getAllNotes()
  +Future insertNote()
  +Future getNote()
  +Future deleteNote()
  +Future deleteAllNotes()
  +Future deleteAllNotesFromProject()
  +Future updateNote()
  +Future getCount()
}

abstract class "citizen_lab::database::project_dao.dart::ProjectDao" {
  +Future insertProject()
  +Future getProject()
  +Future getAllProjects()
  +Future deleteProject()
  +Future deleteAllProjects()
  +Future updateProject()
  +Future getProjectCount()
}

class "citizen_lab::entries::entry_page.dart::EntryPage" {
  +bool isFromProjectPage
  +bool isFromProjectSearchPage
  +String projectTitle
  +Project project
  +Note note
  +_EntryPageState createState()
}

"citizen_lab::entries::entry_page.dart::EntryPage" o-- "citizen_lab::projects::project.dart::Project"
"citizen_lab::entries::entry_page.dart::EntryPage" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::entry_page.dart::EntryPage"

class "citizen_lab::entries::entry_page.dart::_EntryPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -TextEditingController _titleProjectController
  -TextEditingController _descProjectController
  -TextEditingController _textEditingController
  -DatabaseHelper _projectDb
  -ThemeChangerProvider _themeChanger
  -String _title
  -String _createdAt
  -List<Note> _noteList
  +String createdAtDesc
  +String createdAtAsc
  +String titleDesc
  +String titleAsc
  -String _sortingOrderPrefs
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildBody()
  -Widget _buildDismissible()
  -Widget _buildItem()
  -void _setCardColor()
  -Future _updateNote()
  -Widget _buildFabs()
  -void _showEditDialog()
  -void _openModalBottomSheet()
  -void _buildMainBottomSheet()
  -Widget _createTile()
  -Future _updateProject()
  -void _openNotePage()
  -Future _setPermission()
  -Future _setList()
  -Future _getSortingOrder()
  +Future setSortingOrder()
  -Future _loadNoteList()
  -Future _deleteNote()
  -void _deleteAllNotes()
  -Widget _buildSnackBar()
  -void _choiceSortOption()
}

"citizen_lab::entries::entry_page.dart::_EntryPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::entry_page.dart::_EntryPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::entries::entry_page.dart::_EntryPageState" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::entries::entry_page.dart::_EntryPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::entry_page.dart::_EntryPageState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin<T>" <|-- "citizen_lab::entries::entry_page.dart::_EntryPageState"

class "citizen_lab::entries::formulation_item.dart::FormulationItem" {
  +String name
  +IconData icon
}

"citizen_lab::entries::formulation_item.dart::FormulationItem" o-- "flutter::src::widgets::icon_data.dart::IconData"

class "citizen_lab::entries::image::image_page.dart::ImagePage" {
  +Note note
  +String uuid
  +_ImagePageState createState()
}

"citizen_lab::entries::image::image_page.dart::ImagePage" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::image::image_page.dart::ImagePage"

class "citizen_lab::entries::image::image_page.dart::_ImagePageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -GlobalKey<FormState> _formKey
  -TextEditingController _titleEditingController
  -TextEditingController _descEditingController
  -ThemeChangerProvider _themeChanger
  -File _image
  -String _title
  -String _createdAt
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -Future _shareContent()
  -void _setInfoPage()
  -void _backToHomePage()
  -Widget _buildFabs()
  -Widget _buildBody()
  -Future _createImage()
  -Future _getImage()
  -Future _createCachedImage()
  -Future _saveNote()
  -void _updateNote()
  -void _showEditDialog()
  -Widget _buildSnackBarWithButton()
}

"citizen_lab::entries::image::image_page.dart::_ImagePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::image::image_page.dart::_ImagePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"citizen_lab::entries::image::image_page.dart::_ImagePageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::entries::image::image_page.dart::_ImagePageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"citizen_lab::entries::image::image_page.dart::_ImagePageState" o-- "dart::io::File"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::image::image_page.dart::_ImagePageState"

class "citizen_lab::entries::linking_page::weblink_page.dart::WeblinkPage" {
  +Key key
  +Note note
  +String uuid
  +_WeblinkPageState createState()
}

"citizen_lab::entries::linking_page::weblink_page.dart::WeblinkPage" o-- "flutter::src::foundation::key.dart::Key"
"citizen_lab::entries::linking_page::weblink_page.dart::WeblinkPage" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::linking_page::weblink_page.dart::WeblinkPage"

class "citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -TextEditingController _titleEditingController
  -TextEditingController _descEditingController
  -Completer<WebViewController> _webViewController
  -UniqueKey _uniqueKey
  -ThemeChangerProvider _themeChanger
  -String _url
  -String _title
  -String _createdAt
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -void _backToHomePage()
  -Widget _buildBody()
  -Widget _buildFabs()
  -Widget _buildCopyCurrentLinkFab()
  -void _copyContent()
  -void _setClipboard()
  -Future _showEditDialog()
  -Future _saveNote()
  -Future _updateNote()
  -Widget _buildSnackBar()
}

"citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState" o-- "dart::async::Completer<WebViewController>"
"citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState" o-- "flutter::src::widgets::framework.dart::UniqueKey"
"citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::linking_page::weblink_page.dart::_WeblinkPageState"

class "citizen_lab::entries::note.dart::Note" {
  +int id
  +String uuid
  +String type
  +String title
  +String description
  +String filePath
  +String createdAt
  +String updatedAt
  +int isFirstTime
  +int isEdited
  +int cardColor
  +int cardTextColor
  +Map toMap()
}

"citizen_lab::entry.dart::Entry" <|-- "citizen_lab::entries::note.dart::Note"

class "citizen_lab::entries::table::table_page.dart::TablePage" {
  +Note note
  +String uuid
  +_TablePageState createState()
}

"citizen_lab::entries::table::table_page.dart::TablePage" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::table::table_page.dart::TablePage"

class "citizen_lab::entries::table::table_page.dart::_TablePageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -TextEditingController _titleEditingController
  -TextEditingController _descriptionEditingController
  -TextEditingController _rowTextEditingController
  -TextEditingController _columnTextEditingController
  -List<TextEditingController> _listTextEditingController
  -ThemeChangerProvider _themeChanger
  -File _csv
  -int _column
  -int _row
  -String _title
  -String _createdAt
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -void _shareContent()
  -void _setInfoPage()
  -void _backToHomePage()
  -Widget _buildBody()
  -void _generateTable()
  -void _csvRead()
  -List _csvToList()
  -String _listToCsv()
  -Widget _buildFabs()
  -void _clearTableContent()
  -bool _checkIfTableIsEmpty()
  -Future _saveNote()
  -Future _updateNote()
  -Future _shareCsv()
  -void _showDialogEditImage()
  -void _buildTableCreate()
  -Future _createCsv()
  -Future _localPath()
  -void _clearAllFields()
  -void _checkAllFields()
  -Widget _buildSnackBar()
  -Widget _buildSnackBarWithButton()
}

"citizen_lab::entries::table::table_page.dart::_TablePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::table::table_page.dart::_TablePageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::entries::table::table_page.dart::_TablePageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"citizen_lab::entries::table::table_page.dart::_TablePageState" o-- "dart::io::File"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::table::table_page.dart::_TablePageState"

class "citizen_lab::entries::text::text_page.dart::TextPage" {
  +Key key
  +Note note
  +String uuid
  +_TextPageState createState()
}

"citizen_lab::entries::text::text_page.dart::TextPage" o-- "flutter::src::foundation::key.dart::Key"
"citizen_lab::entries::text::text_page.dart::TextPage" o-- "citizen_lab::entries::note.dart::Note"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::text::text_page.dart::TextPage"

class "citizen_lab::entries::text::text_page.dart::_TextPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -TextEditingController _titleEditingController
  -TextEditingController _descEditingController
  -DatabaseHelper _noteDb
  -TitleBloc _titleBloc
  -ThemeChangerProvider _themeChanger
  -TitleChangerProvider _titleChanger
  -String _title
  -String _savedTitle
  -String _createdAt
  -String _editedAt
  -PdfCreator _pdfCreator
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildBody()
  -Widget _buildAppBar()
  -Future _createPdf()
  -Future _shareContent()
  -Future _localPath()
  -void _backToHomePage()
  -void _setInfoPage()
  -Future _saveNote()
  -Future _updateNote()
  -int _checkIfContentEdited()
  -Widget _buildFabs()
  -void _refreshTextFormFields()
  -void _copyContent()
  -void _openModalBottomSheet()
  -void _buildMainBottomSheet()
  -Widget _createTile()
  -void _setClipboard()
  -Widget _buildSnackBar()
  -Widget _buildSnackBarWithButton()
}

"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "citizen_lab::bloc::title_bloc.dart::TitleBloc"
"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "citizen_lab::title_change_provider.dart::TitleChangerProvider"
"citizen_lab::entries::text::text_page.dart::_TextPageState" o-- "citizen_lab::pdf_creator.dart::PdfCreator"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::text::text_page.dart::_TextPageState"

class "citizen_lab::entries::tools::calculator_button.dart::CalculatorButton" {
  +bool isIcon
  +String title
  +IconData iconData
  +void Function() onPressed
  +Widget build()
  -Widget _buildWidget()
}

"citizen_lab::entries::tools::calculator_button.dart::CalculatorButton" o-- "flutter::src::widgets::icon_data.dart::IconData"
"citizen_lab::entries::tools::calculator_button.dart::CalculatorButton" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::entries::tools::calculator_button.dart::CalculatorButton"

class "citizen_lab::entries::tools::calculator_model.dart::CalculatorModel" {
  +bool isIcon
  +int title
  +IconData iconData
}

"citizen_lab::entries::tools::calculator_model.dart::CalculatorModel" o-- "flutter::src::widgets::icon_data.dart::IconData"

class "citizen_lab::entries::tools::calculator_page.dart::CalculatorPage" {
  +_CalculatorPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::tools::calculator_page.dart::CalculatorPage"

class "citizen_lab::entries::tools::calculator_page.dart::_CalculatorPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -ThemeChangerProvider _themeChanger
  +String output
  -String _output
  +double num1
  +double num2
  +String operand
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildBody()
  -dynamic _buttonPressed()
  -Widget _buildButton()
  -Widget _buildFabs()
  -void _copyContent()
  -void _setClipboard()
  -Widget _buildSnackBar()
}

"citizen_lab::entries::tools::calculator_page.dart::_CalculatorPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::tools::calculator_page.dart::_CalculatorPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::tools::calculator_page.dart::_CalculatorPageState"

class "citizen_lab::entries::tools::geolocation_page.dart::GeolocationPage" {
  +_GeolocationPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::tools::geolocation_page.dart::GeolocationPage"

class "citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -Geolocator _geolocator
  -Position _position
  -AnimationController _animationController
  -Animation<double> _animation
  -Timer _timer
  -ThemeChangerProvider _themeChanger
  +String latitude
  +String longitude
  +String accuracy
  +void initState()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -void _shareContent()
  -Future _backToHomePage()
  -Widget _buildBody()
  -Widget _buildFabs()
  -Future _getLocation()
  -void _copyContent()
  -void _setClipboard()
  -Widget _buildSnackBar()
}

"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "geolocator::geolocator.dart::Geolocator"
"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "geolocator::geolocator.dart::Position"
"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "dart::async::Timer"
"citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin<T>" <|-- "citizen_lab::entries::tools::geolocation_page.dart::_GeolocationPageState"

class "citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::StopwatchPage" {
  +_StopwatchPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::StopwatchPage"

class "citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -Stopwatch _stopWatch
  -Duration _timeout
  -ScrollController _scrollController
  -ThemeChangerProvider _themeChanger
  -String _stopWatchText
  -String _elapsedTime
  -Icon _icon
  -List<String> _elapsedTimeList
  +Widget build()
  -Widget _buildAppBar()
  -void _shareContent()
  -void _backToHomePage()
  -Widget _buildBody()
  -void _running()
  -void _startStopButtonPressed()
  -void _startTimeout()
  -void _handleTimeout()
  -void _resetButtonPressed()
  -void _setElapsedTime()
  -void _setStopwatchText()
  -Widget _buildFabs()
  -void _clearList()
  -void _copyContent()
  -void _setClipboard()
  -Widget _buildSnackBar()
  -void _onBackPressed()
}

"citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState" o-- "flutter::src::widgets::icon.dart::Icon"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin<T>" <|-- "citizen_lab::entries::tools::stopwatch::stopwatch_page.dart::_StopwatchPageState"

class "citizen_lab::entries::tools::stopwatch::stopwatch_provider.dart::StopwatchProvider" {
  -String _time
  +dynamic getTime()
  +dynamic setTheme()
}

"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::entries::tools::stopwatch::stopwatch_provider.dart::StopwatchProvider"

class "citizen_lab::entries::tools::timer_painter.dart::TimerPainter" {
  +Animation<double> animation
  +Color color
  +Color backgroundColor
  +void paint()
  +bool shouldRepaint()
}

"citizen_lab::entries::tools::timer_painter.dart::TimerPainter" o-- "flutter::src::animation::animation.dart::Animation<double>"
"citizen_lab::entries::tools::timer_painter.dart::TimerPainter" o-- "dart::ui::Color"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "citizen_lab::entries::tools::timer_painter.dart::TimerPainter"

abstract class "citizen_lab::entry.dart::Entry" {
  +int id
  +String uuid
  +String title
  +String description
  +String createdAt
  +String updatedAt
  +int cardColor
  +int cardTextColor
}

class "citizen_lab::home::home_page.dart::HomePage" {
  +_HomePageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::home::home_page.dart::HomePage"

class "citizen_lab::home::home_page.dart::_HomePageState" {
  -AnimationController _animationController
  -Animation<double> _animation
  -bool _valueSwitch
  -GlobalKey<ScaffoldState> _scaffoldKey
  -DatabaseHelper _projectDb
  -List<Project> _projectList
  -String _sortOrder
  +void initState()
  +Widget build()
  -Widget _buildAppBar()
  -void _setSearch()
  -Widget _buildFabs()
  -Future _createProject()
  -void _deleteAllProjects()
  -void _choiceSortOption()
  -Widget _buildDrawer()
  -Future _launchWeb()
  -void _checkIfDarkModeEnabled()
  -void _setNavigation()
  -void _onChangedSwitch()
  -Widget _buildDrawerItem()
  -Widget _buildBody()
  -Widget _buildDismissible()
  -Widget _buildItem()
  -void _setCardColor()
  -Future _updateProject()
  -Future _navigateToEntry()
  -Widget _buildSnackBar()
  -Future _getSortingOrder()
  +Future setSortingOrder()
  -Future _loadProjectList()
  -void _openModalBottomSheet()
  -void _buildMainBottomSheet()
  -Widget _createTile()
  -Future _deleteProject()
}

"citizen_lab::home::home_page.dart::_HomePageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"citizen_lab::home::home_page.dart::_HomePageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"citizen_lab::home::home_page.dart::_HomePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::home::home_page.dart::_HomePageState" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::home::home_page.dart::_HomePageState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin<T>" <|-- "citizen_lab::home::home_page.dart::_HomePageState"

class "citizen_lab::home::main_drawer.dart::MainDrawer" {
  +double drawerWidth
  +String location
  +List<Widget> children
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::home::main_drawer.dart::MainDrawer"

class "citizen_lab::home::simple_drawer_header.dart::SimpleDrawerHeader" {
  +String title
  +Color titleColor
  +Color backgroundColor
  +Color backgroundColor2
  +double padding
  +double fontSize
  +Widget build()
}

"citizen_lab::home::simple_drawer_header.dart::SimpleDrawerHeader" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::home::simple_drawer_header.dart::SimpleDrawerHeader"

class "citizen_lab::material_app_with_theme.dart::MaterialAppWithTheme" {
  +_MaterialAppWithThemeState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::material_app_with_theme.dart::MaterialAppWithTheme"

class "citizen_lab::material_app_with_theme.dart::_MaterialAppWithThemeState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::material_app_with_theme.dart::_MaterialAppWithThemeState"

class "citizen_lab::note_model.dart::NoteModel" {
  +int id
  +String uuid
  +String type
  +String title
  +String description
  +String content
  +String dateCreated
  +String dateEdited
  +int edited
  +void saveNote()
  +void updateNote()
  +void deleteNote()
}

"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::note_model.dart::NoteModel"
"citizen_lab::note_model.dart::NoteBase" <|-- "citizen_lab::note_model.dart::NoteModel"

abstract class "citizen_lab::note_model.dart::NoteBase" {
  +void saveNote()
  +void updateNote()
  +void deleteNote()
}

class "citizen_lab::note_search_page.dart::NoteSearchPage" {
  +List<Note> noteList
  +bool isFromNoteSearchPage
  +Function openNotePage
  +Function reloadNoteList
  -bool _darkModeEnabled
  +ThemeData appBarTheme()
  -void _checkIfDarkModeEnabled()
  +List buildActions()
  +Widget buildLeading()
  +Widget buildResults()
  +Widget buildSuggestions()
  -List _getNoteTitles()
}

"flutter::src::material::search.dart::SearchDelegate<T>" <|-- "citizen_lab::note_search_page.dart::NoteSearchPage"

class "citizen_lab::onboarding::onboarding_data.dart::PageModel" {
  +String image
  +String title
  +String content
}

class "citizen_lab::onboarding::onboarding_page.dart::OnboardingPage" {
  +_OnboardingPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::onboarding::onboarding_page.dart::OnboardingPage"

class "citizen_lab::onboarding::onboarding_page.dart::_OnboardingPageState" {
  -PageController _pageController
  -int _currentPage
  -bool _lastPage
  -AnimationController _animationController
  -Animation<double> _scaleAnimation
  +void initState()
  +void dispose()
  +Widget build()
  -void _setNavigation()
}

"citizen_lab::onboarding::onboarding_page.dart::_OnboardingPageState" o-- "flutter::src::widgets::page_view.dart::PageController"
"citizen_lab::onboarding::onboarding_page.dart::_OnboardingPageState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"citizen_lab::onboarding::onboarding_page.dart::_OnboardingPageState" o-- "flutter::src::animation::animation.dart::Animation<double>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::onboarding::onboarding_page.dart::_OnboardingPageState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin<T>" <|-- "citizen_lab::onboarding::onboarding_page.dart::_OnboardingPageState"

class "citizen_lab::onboarding::page_indicator.dart::PageIndicator" {
  +int currentIndex
  +int pageCount
  +Widget build()
  -Widget _indicator()
  -List _buildPageIndicators()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::onboarding::page_indicator.dart::PageIndicator"

class "citizen_lab::pdf_creator.dart::PdfCreator" {
  +String title
  +String content
  +String dateCreated
  +String filePath
  +Document pdf
  +void createPdf()
  +Future savePdf()
}

"citizen_lab::pdf_creator.dart::PdfCreator" o-- "pdf::widgets.dart::Document"

class "citizen_lab::projects::create_project_page.dart::CreateProjectPage" {
  +_CreateProjectPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::projects::create_project_page.dart::CreateProjectPage"

class "citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" {
  -GlobalKey<ScaffoldState> _snackBarKey
  -GlobalKey<FormState> _formKey
  -TextEditingController _titleEditingController
  -TextEditingController _descEditingController
  -DatabaseHelper _projectDb
  -ThemeChangerProvider _themeChanger
  -List<Project> _projectList
  -Color _buttonColor
  -Color _iconColor
  -void _checkTextsAreNotEmpty()
  +void initState()
  -Future _loadProjectList()
  +void dispose()
  +Widget build()
  -Widget _buildAppBar()
  -void _setInfoPage()
  -Widget _buildBody()
  -Widget _buildFabs()
  -Future _createProject()
  -Widget _buildSnackBar()
}

"citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<FormState>"
"citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"citizen_lab::projects::create_project_page.dart::_CreateProjectPageState" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::projects::create_project_page.dart::_CreateProjectPageState"

class "citizen_lab::projects::edit_project_dialog.dart::EditProjectDialog" {
  +Key key
  +TextEditingController titleProjectController
  +TextEditingController descProjectController
  +void Function() onPressedClose
  +void Function() onPressedClean
  +void Function() onPressedAccept
  +String createdAt
  +_EditProjectDialogState createState()
}

"citizen_lab::projects::edit_project_dialog.dart::EditProjectDialog" o-- "flutter::src::foundation::key.dart::Key"
"citizen_lab::projects::edit_project_dialog.dart::EditProjectDialog" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"citizen_lab::projects::edit_project_dialog.dart::EditProjectDialog" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::projects::edit_project_dialog.dart::EditProjectDialog"

class "citizen_lab::projects::edit_project_dialog.dart::_EditProjectDialogState" {
  -String _timeString
  -Timer _timer
  +void initState()
  +void dispose()
  -void _getTime()
  +Widget build()
}

"citizen_lab::projects::edit_project_dialog.dart::_EditProjectDialogState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::projects::edit_project_dialog.dart::_EditProjectDialogState"

class "citizen_lab::projects::project.dart::Project" {
  +int id
  +String uuid
  +String title
  +String description
  +String createdAt
  +String updatedAt
  +int cardColor
  +int cardTextColor
  +Map toMap()
}

"citizen_lab::entry.dart::Entry" <|-- "citizen_lab::projects::project.dart::Project"

class "citizen_lab::projects::project_item.dart::ProjectItem" {
  +Project project
  +void Function() onTap
  +void Function() onLongPress
  +Widget build()
}

"citizen_lab::projects::project_item.dart::ProjectItem" o-- "citizen_lab::projects::project.dart::Project"
"citizen_lab::projects::project_item.dart::ProjectItem" o-- "flutter::src::gestures::tap.dart::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "citizen_lab::projects::project_item.dart::ProjectItem"

class "citizen_lab::projects::project_page.dart::ProjectPage" {
  +bool isFromCreateProjectPage
  +_ProjectPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::projects::project_page.dart::ProjectPage"

class "citizen_lab::projects::project_page.dart::_ProjectPageState" {
  -GlobalKey<ScaffoldState> _scaffoldKey
  -DatabaseHelper _projectDb
  -List<Project> _projectList
  -ThemeChangerProvider _themeChanger
  +void initState()
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildFab()
  -void _deleteAllProjects()
  -void _choiceSortOption()
  -Widget _buildBody()
  -Future _navigateToEntry()
  -void _showContent()
  -Widget _buildSnackBar()
  -Future _loadProjectList()
  -Future _deleteProject()
  -Future _onBackPressed()
}

"citizen_lab::projects::project_page.dart::_ProjectPageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"citizen_lab::projects::project_page.dart::_ProjectPageState" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::projects::project_page.dart::_ProjectPageState" o-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::projects::project_page.dart::_ProjectPageState"

class "citizen_lab::projects::project_search_page.dart::ProjectSearchPage" {
  +List<Project> projectList
  +bool isFromProjectSearchPage
  -bool _darkModeEnabled
  +Function reloadProjectList
  +ThemeData appBarTheme()
  -void _checkIfDarkModeEnabled()
  +List buildActions()
  +Widget buildLeading()
  +Widget buildResults()
  +Widget buildSuggestions()
  -Future _setNavigation()
  -List _getProjectTitles()
}

"flutter::src::material::search.dart::SearchDelegate<T>" <|-- "citizen_lab::projects::project_search_page.dart::ProjectSearchPage"

class "citizen_lab::project_template_page.dart::ProjectTemplatePage" {
  +_ProjectTemplatePageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::project_template_page.dart::ProjectTemplatePage"

class "citizen_lab::project_template_page.dart::_ProjectTemplatePageState" {
  -DatabaseHelper _projectDb
  -List<String> _templateList
  -GlobalKey<ScaffoldState> _scaffoldKey
  +Widget build()
  -Widget _buildAppBar()
  -Widget _buildBody()
  -Widget _buildSnackBar()
  -Future _createTemplateContent()
  -Future _onBackPressed()
}

"citizen_lab::project_template_page.dart::_ProjectTemplatePageState" o-- "citizen_lab::database::database_provider.dart::DatabaseHelper"
"citizen_lab::project_template_page.dart::_ProjectTemplatePageState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScaffoldState>"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::project_template_page.dart::_ProjectTemplatePageState"

class "citizen_lab::speech_recognition_page.dart::TtsState" {
  +int index
  {static} +List<TtsState> values
  {static} +TtsState playing
  {static} +TtsState stopped
}

"citizen_lab::speech_recognition_page.dart::TtsState" o-- "citizen_lab::speech_recognition_page.dart::TtsState"

class "citizen_lab::speech_recognition_page.dart::SpeechRecognitionPage" {
  +_SpeechRecognitionPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::speech_recognition_page.dart::SpeechRecognitionPage"

class "citizen_lab::speech_recognition_page.dart::_SpeechRecognitionPageState" {
  +FlutterTts flutterTts
  +dynamic languages
  +dynamic voices
  +String language
  +String voice
  -String _newVoiceText
  +TtsState ttsState
  +dynamic isPlaying
  +dynamic isStopped
  +void initState()
  +dynamic initTts()
  -Future _getLanguages()
  -Future _getVoices()
  -Future _speak()
  -Future _stop()
  +void dispose()
  +List getLanguageDropDownMenuItems()
  +List getVoiceDropDownMenuItems()
  +void changedLanguageDropDownItem()
  +void changedVoiceDropDownItem()
  -void _onChange()
  +Widget build()
  +Widget inputSection()
  +Widget btnSection()
  +Widget languageDropDownSection()
  +Widget voiceDropDownSection()
  -Column _buildButtonColumn()
}

"citizen_lab::speech_recognition_page.dart::_SpeechRecognitionPageState" o-- "flutter_tts::flutter_tts.dart::FlutterTts"
"citizen_lab::speech_recognition_page.dart::_SpeechRecognitionPageState" o-- "citizen_lab::speech_recognition_page.dart::TtsState"
"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::speech_recognition_page.dart::_SpeechRecognitionPageState"

class "citizen_lab::splash_page.dart::SplashPage" {
  +_SplashPageState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "citizen_lab::splash_page.dart::SplashPage"

class "citizen_lab::splash_page.dart::_SplashPageState" {
  +void initState()
  +Widget build()
  -Future _checkFirstSeen()
}

"flutter::src::widgets::framework.dart::State<T>" <|-- "citizen_lab::splash_page.dart::_SplashPageState"

class "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider" {
  -ThemeData _themeData
  -bool _darkModeEnabled
  +ThemeData getTheme
  +bool getDarkModeStatus
  +void setTheme()
}

"citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider" o-- "flutter::src::material::theme_data.dart::ThemeData"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::themes::theme_changer_provider.dart::ThemeChangerProvider"

class "citizen_lab::title_change_provider.dart::TitleChangerProvider" {
  -String _title
  +String titleIsEmpty
  +String getTitle
  +void setTitle()
  +String getErrorMessage()
}

"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "citizen_lab::title_change_provider.dart::TitleChangerProvider"

class "citizen_lab::utils::route_generator.dart::RouteGenerator" {
  {static} +String homepage
  {static} +String splashPage
  {static} +String createProject
  {static} +String aboutPage
  {static} +String entry
  {static} +String textPage
  {static} +String imagePage
  {static} +String tablePage
  {static} +String sketchPage
  {static} +String infoPage
  {static} +String citizenSciencePage
  {static} +String detailPage
  {static} +String sensorPage
  {static} +String onboardingPage
  {static} +String calculatorPage
  {static} +String stopwatchPage
  {static} +String linkingPage
  {static} +String projectTemplatePage
  {static} +String speechRecognitionPage
  {static} +String audioRecordPage
  {static} +String webPage
  {static} +String routeHomePage
  {static} +String routeSplashPage
  {static} +String routeCreateProject
  {static} +String routeAboutPage
  {static} +String routeEntryPage
  {static} +String routeTextPage
  {static} +String routeImagePage
  {static} +String routeTablePage
  {static} +String routeSketchPage
  {static} +String routeInfoPage
  {static} +String routeDetailPage
  {static} +String routeCitizenSciencePage
  {static} +String routeSensorPage
  {static} +String routeOnboardingPage
  {static} +String routeCalculatorPage
  {static} +String routeStopwatchPage
  {static} +String routeLinkingRecordPage
  {static} +String routeCitizenScienceWebPage
  {static} +String routeProjectTemplatePage
  {static} +String routeSpeechRecognitionPage
  {static} +String routeAudioRecordingPage
  {static} +String project
  {static} +String projectTitle
  {static} +String projectUuid
  {static} +String isFromProjectPage
  {static} +String isFromProjectSearchPage
  {static} +String note
  {static} +String url
  {static} +String title
  {static} +String tabLength
  {static} +String tabs
  {static} +String tabChildren
  {static} +String image
  {static} +String location
  {static} +String researchSubject
  {static} +String built
  {static} +String extended
  {static} +String contactPerson
  {static} +String content
  {static} +null routes()
}

class "citizen_lab::utils::utils.dart::Utils" {
  {static} +Offset localPosition()
  {static} +bool isNumeric()
  {static} +String generateRandomUuid()
  {static} +String removeWhiteSpace()
}


@enduml